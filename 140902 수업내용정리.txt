* Access Modifier
default(anonymous)
	접근 허용(같은 패키지안에서만 허용)
public
	접근 허용(완전 허용)
private
	접근 불가(완전 불가-다른 클래스로부터의 접근 불가)
protected
	접근 불가(다른 패키지로부터의 접근 불가-같은 패키지안에서는 가능)
	- 상속도 가능하면서 보호도 됨.. 

*** 인터페이스

1. 클래스를 설계하기 위한 설계도
2. 목적
1) 클래스를 좀 더 정확하고 안전하게 설계 - 클래스를 도와주기 위한 보조적인 수단
2) 표준화를 위한 약속, 규칙 
3) 의존성(dependency)을 최소화
3. 완전(순수) 추상 클래스 - 인스턴스 생성x, 100% 추상메서드로만..
4. 다중 상속 가능
5. 상속 받을 때 implements 키워드 사용 (확장X, 구현의 의미. 비어있는 것을 채워 넣는 것)

과제
1. 소리를 높일 때 50이상 넘지 않도록 한다. 
2. 소리를 줄일 때 0미만으로 줄일 수 없도록 한다.(0은 mute기능)
3. 소리를 높이거나 줄일 때 반드시 전원이 켜있을 때만 가능하게 한다.
4. 실행 예시
	제품 선택
	1. TV
	2. Radio
	3. Speaker
	입력: _1
	
	// 이 메세지는 TV 전원이 꺼져있을 경우 
	TV 전원을 켜시겠습니까? _ (0이나 1을 입력)

	// 켜져 있을 경우
	TV 전원을 끄시겠습니까? _ (0이나 1을 입력)

	1. 소리증가
	2. 소리감소
	입력: _1
	값: _20

	TV 볼륨이 20 증가하였습니다. 
	현재 TV 볼륨: 20

